name: debezium-test
services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-16-alpine}
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: debezium
      POSTGRES_PASSWORD: 321muizebed
    volumes:
      - ./docker/postgres/entrypoint:/docker-entrypoint-initdb.d:ro
    command: ["postgres", "-c", "wal_level=logical"]

  kafka-1:
    image: apache/kafka:${KAFKA_VERSION:-3.9.1}
    ports:
      - 29092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093  #,2@kafka-2:9093
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: /opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server kafka-1:19092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60

#  kafka-2:
#    image: apache/kafka:${KAFKA_VERSION:-3.9.1}
#    ports:
#      - 39092:9092
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:19092,PLAINTEXT_HOST://localhost:39092
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093
#      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_NODE_ID: 2
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-connect:
    image: confluentinc/cp-kafka-connect:${KAFKA_CONNECT_VERSION:-7.9.1}
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-1:19092  #,kafka-2:9092
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1  # Set to one since we are only running a single node
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_GROUP_ID: connect-group
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1  # Set to one since we are only running a single node
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_PLUGIN_PATH: /opt/kafka/connectors
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1  # Set to one since we are only running a single node
      CONNECT_STATUS_STORAGE_TOPIC: _connect-statuses
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    volumes:
      - ./docker/kafka/connectors:/opt/kafka/connectors:ro
    depends_on:
      kafka-1:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui:${KAFKA_UI_VERSION:-v0.7.2}
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092
    depends_on:
      kafka-1:
        condition: service_healthy

